{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/contexts/AppContextProvider.tsx","webpack:///./scripts/src/constants.ts","webpack:///./src/components/ArcGIS/MapView.tsx","webpack:///./src/constants/map.ts","webpack:///./src/components/AppLayout/AppLayout.tsx","webpack:///./src/components/SparklineLayer/SparklineLayer.tsx","webpack:///./src/components/SparklineLayerSwitcher/SparklineLayerSwitcher.tsx","webpack:///./src/pages/Root/RootPage.tsx","webpack:///./src/index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","AppContext","createContext","AppContextProvider","children","useState","setValue","loadAppData","a","axios","resUmempolymentDataPaths4States","resUmempolymentDataPaths4Counties","resUmempolymentDataPaths4US","unemploymentDataPathsStates","unemploymentDataPathsCounties","unemploymentDataPathsUS","React","useEffect","Provider","MapView","webmapId","mapDivRef","useRef","mapView","setMapView","initMapView","loadModules","WebMap","view","container","current","map","portalItem","id","when","addWatchEvent","whenTrue","zoom","loadCss","style","position","top","left","width","height","ref","Children","child","cloneElement","VISIBLE_SCALE_STATES","min","max","VISIBLE_SCALE_COUNTIES","AppLayout","useContext","showDeviation","setShowDeviation","nationalLevelData","visibleScale","onChange","SparklineLayer","renderDealy","layerRef","isLayerInVisibleScale","setIsLayerInVisibleScale","init","GraphicsLayer","watchUtils","minScale","maxScale","visible","add","isInVisibleScale","scale","draw","layer","nationalLevelPathData","features","PctUnemployed","path","nationalLevelFrame","frames","CIMSymbol","Graphic","Point","frame","PctUnemployedDeviation","addGraphicsByChunk","startIndex","chunckNum","endIndex","graphics","feature","geometry","anchorPoint","x","y","size","symbol","type","symbolLayers","anchorPointUnits","enable","scaleSymbolsProportionally","respectFrame","markerGraphics","paths","color","xmax","latitude","longitude","addMany","setTimeout","removeAll","clearTimeout","SparklineLayerSwitcher","right","background","padding","cursor","zIndex","onClick","className","classnames","RootPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAKlC,IAFGe,GAAqBA,EAAoBhB,GAEtCO,EAASC,QACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrBiB,EAAG,GAGAZ,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU8B,QAGnC,IAAIC,EAASH,EAAiB5B,GAAY,CACzCK,EAAGL,EACHgC,GAAG,EACHF,QAAS,IAUV,OANAhB,EAAQd,GAAUW,KAAKoB,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAG/DK,EAAOC,GAAI,EAGJD,EAAOD,QAKfJ,EAAoBO,EAAInB,EAGxBY,EAAoBQ,EAAIN,EAGxBF,EAAoBS,EAAI,SAASL,EAASM,EAAMC,GAC3CX,EAAoBY,EAAER,EAASM,IAClC5B,OAAO+B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEX,EAAoBgB,EAAI,SAASZ,GACX,oBAAXa,QAA0BA,OAAOC,aAC1CpC,OAAO+B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DrC,OAAO+B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKzC,OAAO0C,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBzC,OAAO+B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBS,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAL,EAAoBS,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRX,EAAoBY,EAAI,SAASgB,EAAQC,GAAY,OAAO/C,OAAOC,UAAUC,eAAeC,KAAK2C,EAAQC,IAGzG7B,EAAoB8B,EAAI,GAExB,IAAIC,EAAaC,OAAqB,aAAIA,OAAqB,cAAK,GAChEC,EAAmBF,EAAW5C,KAAKuC,KAAKK,GAC5CA,EAAW5C,KAAOf,EAClB2D,EAAaA,EAAWG,QACxB,IAAI,IAAIvD,EAAI,EAAGA,EAAIoD,EAAWlD,OAAQF,IAAKP,EAAqB2D,EAAWpD,IAC3E,IAAIU,EAAsB4C,EAI1B1C,EAAgBJ,KAAK,CAAC,GAAG,IAElBM,I,2KClII0C,EAAaC,wBAA+B,MA4C1CC,EA1C+C,SAAC,GAEhC,IAD3BC,EAC2B,EAD3BA,SAC2B,EACDC,qBADC,WACpBpB,EADoB,KACbqB,EADa,KAGrBC,EAAW,+BAAG,gCAAAC,EAAA,+EAEkCC,IAAM5B,IAAN,mBC5BP,mCD0B3B,cAEN6B,EAFM,gBAMoCD,IAAM5B,IAAN,mBClCP,qCD4B7B,cAMN8B,EANM,gBAU8BF,IAAM5B,IAAN,mBClCP,qCDwBvB,OAUN+B,EAVM,OAcZN,EAAS,CACLO,4BACIH,EAAgCvE,KACpC2E,8BACIH,EAAkCxE,KACtC4E,wBAAyBH,EAA4BzE,OAnB7C,4GAAH,qDA8BjB,OAJA6E,IAAMC,WAAU,WACZV,MACD,IAGC,kBAACN,EAAWiB,SAAZ,CAAqBjC,MAAOA,GACvBA,EAAQmB,EAAW,O,OEwDjBe,EAxGkB,SAAC,GAAkC,IAAhCC,EAAgC,EAAhCA,SAAUhB,EAAsB,EAAtBA,SACpCiB,EAAYL,IAAMM,SADwC,EAGlCN,IAAMX,SAAmB,MAHS,WAGzDkB,EAHyD,KAGhDC,EAHgD,KAK1DC,EAAW,+BAAG,oCAAAjB,EAAA,+EAIqBkB,sBAAY,CACzC,qBACA,gBANQ,2BAILP,EAJK,KAIIQ,EAJJ,MASNC,EAAO,IAAIT,EAAQ,CACrBU,UAAWR,EAAUS,QACrBC,IAAK,IAAIJ,EAAO,CACZK,WAAY,CACRC,GAAIb,QAKXc,MAAK,WACNV,EAAWI,MAnBH,4GAAH,qDA0BXO,EAAa,+BAAG,8BAAA3B,EAAA,+EAIckB,sBAAY,CACpC,yBALU,gCAQHU,SAASb,EAAS,cAAc,WAGnCA,EAAQc,QAXF,yGAAH,qDA+CnB,OAXArB,IAAMC,WAAU,WACZqB,oBACAb,MACD,IAEHT,IAAMC,WAAU,WACRM,GACAY,MAEL,CAACZ,IAGA,oCACI,yBACIgB,MAAO,CACHC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,OACPC,OAAQ,QAEZC,IAAKxB,IAERE,EACKP,IAAM8B,SAASf,IAAI3B,GAAU,SAAC2C,GAC1B,OAAO/B,IAAMgC,aACTD,EACA,CACIxB,eAIZ,OC7GL0B,EAAuB,CAChCC,IAAK,SACLC,IAAK,KAGIC,EAAyB,CAClCF,IAAK,IACLC,IAAK,GCwCME,EAnCG,WAAM,MAKhBC,qBAA4BrD,GAH5BY,EAFgB,EAEhBA,4BACAC,EAHgB,EAGhBA,8BACAC,EAJgB,EAIhBA,wBAJgB,EAOsBV,oBAAkB,GAPxC,WAObkD,EAPa,KAOEC,EAPF,KASpB,OACI,oCACI,kBAAC,EAAD,CAASpC,SDzBK,oCC0BV,kBAAC,EAAD,CACImC,cAAeA,EACfE,kBAAmB1C,EACnB5E,KAAM0E,EACN6C,aAAcT,IAGlB,kBAAC,EAAD,CACIM,cAAeA,EACfE,kBAAmB1C,EACnB5E,KAAM2E,EACN4C,aAAcN,KAItB,kBAAC,EAAD,CACIG,cAAeA,EACfI,SAAUH,EAAiBhE,U,GAAY+D,OCkRxCK,EA/RyB,SAAC,GAOnC,IANFzH,EAME,EANFA,KACAsH,EAKE,EALFA,kBACAF,EAIE,EAJFA,cAEAG,EAEE,EAFFA,aACAnC,EACE,EADFA,QAEMsC,EAAcvC,mBAEdwC,EAAWxC,mBAHf,EAKwDjB,oBACtD,GANF,WAKK0D,EALL,KAK4BC,EAL5B,KASIC,EAAI,+BAAG,kCAAAzD,EAAA,+EAIsCkB,sBAAY,CACnD,4BACA,yBANC,2BAIEwC,EAJF,KAIiBC,EAJjB,KASLL,EAAShC,QAAU,IAAIoC,EAAc,CACjCE,SAAUV,GAAgBA,EAAaR,IACvCmB,SAAUX,GAAgBA,EAAaP,IACvCmB,SAAS,IAGb/C,EAAQQ,IAAIwC,IAAIT,EAAShC,SAEzBqC,EAAW/B,SAASb,EAAS,cAAc,WACvC,IAAMiD,EACFjD,EAAQkD,MAAQf,EAAaR,KAC7B3B,EAAQkD,MAAQf,EAAaP,IACjCa,EAAyBQ,MArBxB,4GAAH,qDA4BJE,EAAI,+BAAG,gDAAAlE,EAAA,6DACHmE,EAAQb,EAAShC,QAIjB8C,EACFnB,EAAkBoB,SAAS,GAAGC,cAAcC,KAC1CC,EAAqBvB,EAAkBwB,OAAOH,cAP3C,kBAYsCpD,sBAAY,CACnD,yBACA,eACA,wBAfC,2BAYEwD,EAZF,KAYaC,EAZb,KAYsBC,EAZtB,KAkBGP,EAAqB1I,EAArB0I,SAAUI,EAAW9I,EAAX8I,OAEZI,EAAQ9B,EACR0B,EAAOK,uBACPL,EAAOH,cAEc,SAArBS,IAAyC,IAAnBC,EAAmB,uDAAN,EAE/BC,EAAY,IACZC,EACFF,EAAaC,EAAYZ,EAASlI,OAC5B6I,EAAaC,EACbZ,EAASlI,OAEbR,EAA8B0I,EAAS7E,MACzCwF,EACAE,GAGEC,EAAWxJ,EAAK4F,KAAI,SAAC6D,GAAY,IAE/BC,EAGAD,EAHAC,SACAf,EAEAc,EAFAd,cACAQ,EACAM,EADAN,uBAOEQ,EAAc,CAChBC,EAAG,EACHC,EAAGzC,EAAgB,GAAK,IAGtB0C,EAAO1C,EAAgB,GAAK,GAE1BwB,GAXSxB,EACX+B,EACAR,GASEC,KAOFmB,EAAS,IAAIhB,EAAU,CACzB/I,KAAM,CACFgK,KAAM,qBACND,OAAQ,CACJC,KAAM,iBACNC,aAAc,CACV,CACID,KAAM,kBACNL,cACAO,iBAAkB,WAClBC,QAAQ,EACRC,4BAA4B,EAC5BC,cAAc,EACdP,OACAZ,QACAoB,eAAgB,CACZ,CACIN,KAAM,mBACNN,SAAU,CACNa,MAAO,CAAC3B,IAEZmB,OAAQ,CACJC,KAAM,gBACNC,aAAc,CACV,CACID,KACI,iBACJxD,MAAO,EACPgE,MAjC1B,CAAC,GAAI,IAAK,IAAK,WAwCZpD,EAqCK,KApCA,CACI4C,KAAM,kBACNL,cACAO,iBAAkB,WAClBC,QAAQ,EACRC,4BAA4B,EAC5BC,cAAc,EACdP,OACAZ,MAAOL,EACPyB,eAAgB,CACZ,CACIN,KAAM,mBACNN,SAAU,CACNa,MAAO,CACH9B,IAGRsB,OAAQ,CACJC,KAAM,gBACNC,aAAc,CACV,CACID,KACI,iBACJxD,MAAO,EACPgE,MAAO,CACH,IACA,GACA,GACA,WASlCpD,EACM,CACI4C,KAAM,kBACNL,cACAO,iBAAkB,WAClBC,QAAQ,EACRC,4BAA4B,EAC5BC,cAAc,EACdP,OACAZ,QACAoB,eAAgB,CACZ,CACIN,KAAM,mBACNN,SAAU,CACNa,MAAO,CACH,CACI,CAAC,EAAG,GACJ,CACIrB,EAAMuB,KACN,MAKhBV,OAAQ,CACJC,KAAM,gBACNC,aAAc,CACV,CACID,KACI,iBACJxD,MAAO,EACPgE,MAAO,CACH,IACA,GACA,GACA,WAQ5B,UActB,OARgB,IAAIxB,EAAQ,CACxBU,SAAU,IAAIT,EAAM,CAChByB,SAAUhB,EAASG,EACnBc,UAAWjB,EAASE,IAExBG,cAMRvB,EAAMoC,QAAQpB,GAEVH,EAAaC,EAAYZ,EAASlI,OAClCkH,EAAY/B,QAAUkF,YAAW,WAC7BzB,EAAmBC,EAAaC,KACjC,GAEHd,EAAML,SAAU,EAIxBiB,CAAmB,GA9Md,4GAAH,qDAgPV,OA5BAtE,qBAAU,WACFM,GACA0C,MAEL,CAAC1C,IAEJN,qBAAU,WACF6C,EAAShC,SAAW3F,IACpB2H,EAAShC,QAAQmF,YACjBC,aAAarD,EAAY/B,SAErBiC,GACAW,OAGT,CAACZ,EAAU3H,EAAMoH,IAEpBtC,qBAAU,WAEF9E,GACA4H,IACCD,EAAShC,QAAQ6D,SAAShJ,SAE3BuK,aAAarD,EAAY/B,SACzB4C,OAEL,CAACX,IAEG,M,gBC7QIoD,EArCiC,SAAC,GAGpC,IAFT5D,EAES,EAFTA,cACAI,EACS,EADTA,SAEA,OACI,yBACIpB,MAAO,CACHC,SAAU,WACVC,IAAK,OACL2E,MAAO,OACPC,WAAY,OACZC,QAAS,QACTC,OAAQ,UACRC,OAAQ,GAEZC,QAAS9D,GAET,yBAAK+D,UAAU,8BACX,0BACIA,UAAWC,IAAW,QAAS,CAC3B,aAAcpE,KAFtB,oBAOA,0BACImE,UAAWC,IAAW,QAAS,CAC3B,YAAapE,KAFrB,gBCzBDqE,EAJE,WACb,OAAO,kBAAC,EAAD,OCMX,cAAC,sBAAApH,EAAA,sDAGGqH,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,QAGRC,SAASC,eAAe,SAT/B,0CAAD","file":"main.d4043682105b49cfe7b1.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([46,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React, { useState, createContext } from 'react';\nimport axios from 'axios';\n\nimport { MonthlyUmempolymentDataPaths } from '../../shared/types';\n\nimport {\n    UNEMPLOYMENT_PATHS_COUNTIES_FILE_NAME,\n    UNEMPLOYMENT_PATHS_STATES_FILE_NAME,\n    UNEMPLOYMENT_PATHS_US_FILE_NAME,\n} from '../../shared/constants';\n\nexport type AppContextValue = {\n    unemploymentDataPathsUS: MonthlyUmempolymentDataPaths;\n    unemploymentDataPathsStates: MonthlyUmempolymentDataPaths;\n    unemploymentDataPathsCounties?: MonthlyUmempolymentDataPaths;\n};\n\ntype AppContextProviderProps = {\n    children?: React.ReactNode;\n};\n\nexport const AppContext = createContext<AppContextValue>(null);\n\nconst AppContextProvider: React.FC<AppContextProviderProps> = ({\n    children,\n}: AppContextProviderProps) => {\n    const [value, setValue] = useState<AppContextValue>();\n\n    const loadAppData = async () => {\n        try {\n            const resUmempolymentDataPaths4States = await axios.get<\n                MonthlyUmempolymentDataPaths\n            >(`./public/${UNEMPLOYMENT_PATHS_STATES_FILE_NAME}`);\n\n            const resUmempolymentDataPaths4Counties = await axios.get<\n                MonthlyUmempolymentDataPaths\n            >(`./public/${UNEMPLOYMENT_PATHS_COUNTIES_FILE_NAME}`);\n\n            const resUmempolymentDataPaths4US = await axios.get<\n                MonthlyUmempolymentDataPaths\n            >(`./public/${UNEMPLOYMENT_PATHS_US_FILE_NAME}`);\n\n            setValue({\n                unemploymentDataPathsStates:\n                    resUmempolymentDataPaths4States.data,\n                unemploymentDataPathsCounties:\n                    resUmempolymentDataPaths4Counties.data,\n                unemploymentDataPathsUS: resUmempolymentDataPaths4US.data,\n            });\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    React.useEffect(() => {\n        loadAppData();\n    }, []);\n\n    return (\n        <AppContext.Provider value={value}>\n            {value ? children : null}\n        </AppContext.Provider>\n    );\n};\n\nexport default AppContextProvider;\n","export const UNEMPLOYMENT_PATHS_COUNTIES_FILE_NAME = 'unemployment-counties-paths.json';\r\nexport const UNEMPLOYMENT_COUNTIES_FILE_NAME = 'unemployment-counties.json';\r\nexport const UNEMPLOYMENT_PATHS_STATES_FILE_NAME = 'unemployment-states-paths.json';\r\nexport const UNEMPLOYMENT_STATES_FILE_NAME = 'unemployment-states.json';\r\nexport const UNEMPLOYMENT_PATHS_US_FILE_NAME = 'unemployment-national-paths.json';\r\nexport const UNEMPLOYMENT_US_FILE_NAME = 'unemployment-national.json';","import React from 'react';\n\nimport { loadModules, loadCss } from 'esri-loader';\nimport IMapView from 'esri/views/MapView';\nimport IWebMap from 'esri/WebMap';\nimport IwatchUtils from 'esri/core/watchUtils';\n\ninterface Props {\n    webmapId: string;\n    children?: React.ReactNode;\n}\n\nconst MapView: React.FC<Props> = ({ webmapId, children }: Props) => {\n    const mapDivRef = React.useRef<HTMLDivElement>();\n\n    const [mapView, setMapView] = React.useState<IMapView>(null);\n\n    const initMapView = async () => {\n        type Modules = [typeof IMapView, typeof IWebMap];\n\n        try {\n            const [MapView, WebMap] = await (loadModules([\n                'esri/views/MapView',\n                'esri/WebMap',\n            ]) as Promise<Modules>);\n\n            const view = new MapView({\n                container: mapDivRef.current,\n                map: new WebMap({\n                    portalItem: {\n                        id: webmapId,\n                    },\n                }),\n            });\n\n            view.when(() => {\n                setMapView(view);\n            });\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    const addWatchEvent = async () => {\n        type Modules = [typeof IwatchUtils];\n\n        try {\n            const [watchUtils] = await (loadModules([\n                'esri/core/watchUtils',\n            ]) as Promise<Modules>);\n\n            watchUtils.whenTrue(mapView, 'stationary', () => {\n                // console.log('mapview is stationary', mapView.center, mapView.zoom);\n\n                if (mapView.zoom === -1) {\n                    return;\n                }\n\n                // console.log(mapView.scale)\n\n                // const centerLocation: MapCenterLocation = {\n                //     lat:\n                //         mapView.center && mapView.center.latitude\n                //             ? +mapView.center.latitude.toFixed(3)\n                //             : 0,\n                //     lon:\n                //         mapView.center && mapView.center.longitude\n                //             ? +mapView.center.longitude.toFixed(3)\n                //             : 0,\n                //     zoom: mapView.zoom,\n                // };\n\n                // updateMapLocation(centerLocation);\n            });\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    React.useEffect(() => {\n        loadCss();\n        initMapView();\n    }, []);\n\n    React.useEffect(() => {\n        if (mapView) {\n            addWatchEvent();\n        }\n    }, [mapView]);\n\n    return (\n        <>\n            <div\n                style={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                }}\n                ref={mapDivRef}\n            ></div>\n            {mapView\n                ? React.Children.map(children, (child) => {\n                      return React.cloneElement(\n                          child as React.ReactElement<any>,\n                          {\n                              mapView,\n                          }\n                      );\n                  })\n                : null}\n        </>\n    );\n};\n\nexport default MapView;\n","export const WEB_MAP_ID = '5f3b7605b3364e7bb2416c93fae00995';\n\nexport const VISIBLE_SCALE_STATES = {\n    min: 99999999,\n    max: 3000000,\n};\n\nexport const VISIBLE_SCALE_COUNTIES = {\n    min: 3000000,\n    max: 0,\n};\n","import React, { useContext, useState } from 'react';\n\nimport { MapView } from '../ArcGIS';\n\nimport { SparklineLayer, SparklineLayerSwitcher } from '../';\n\nimport {\n    VISIBLE_SCALE_COUNTIES,\n    VISIBLE_SCALE_STATES,\n    WEB_MAP_ID,\n} from '../../constants/map';\n\nimport { AppContext, AppContextValue } from '../../contexts/AppContextProvider';\n\nconst AppLayout = () => {\n    const {\n        unemploymentDataPathsStates,\n        unemploymentDataPathsCounties,\n        unemploymentDataPathsUS,\n    } = useContext<AppContextValue>(AppContext);\n\n    const [showDeviation, setShowDeviation] = useState<boolean>(false);\n\n    return (\n        <>\n            <MapView webmapId={WEB_MAP_ID}>\n                <SparklineLayer\n                    showDeviation={showDeviation}\n                    nationalLevelData={unemploymentDataPathsUS}\n                    data={unemploymentDataPathsStates}\n                    visibleScale={VISIBLE_SCALE_STATES}\n                />\n\n                <SparklineLayer\n                    showDeviation={showDeviation}\n                    nationalLevelData={unemploymentDataPathsUS}\n                    data={unemploymentDataPathsCounties}\n                    visibleScale={VISIBLE_SCALE_COUNTIES}\n                />\n            </MapView>\n\n            <SparklineLayerSwitcher\n                showDeviation={showDeviation}\n                onChange={setShowDeviation.bind(this, !showDeviation)}\n            />\n        </>\n    );\n};\n\nexport default AppLayout;\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport {\n    PathData,\n    PathFrame,\n    MonthlyUmempolymentDataPaths,\n    FeatureWithPathData,\n} from '../../../shared/types';\n\nimport { loadModules } from 'esri-loader';\nimport IMapView from 'esri/views/MapView';\nimport ICIMSymbol from 'esri/symbols/CIMSymbol';\nimport IGraphic from 'esri/Graphic';\nimport IPoint from 'esri/geometry/Point';\nimport IGraphicsLayer from 'esri/layers/GraphicsLayer';\nimport IwatchUtils from 'esri/core/watchUtils';\n\ntype Props = {\n    data: MonthlyUmempolymentDataPaths;\n    // will be used to render national trend\n    nationalLevelData: MonthlyUmempolymentDataPaths;\n    showDeviation?: boolean;\n    // color?: string;\n    visibleScale?: {\n        min: number;\n        max: number;\n    };\n    mapView?: IMapView;\n};\n\nconst SparklineLayer: React.FC<Props> = ({\n    data,\n    nationalLevelData,\n    showDeviation,\n    // color,\n    visibleScale,\n    mapView,\n}) => {\n    const renderDealy = useRef<number>();\n\n    const layerRef = useRef<IGraphicsLayer>();\n\n    const [isLayerInVisibleScale, setIsLayerInVisibleScale] = useState<boolean>(\n        false\n    );\n\n    const init = async () => {\n        type Modules = [typeof IGraphicsLayer, typeof IwatchUtils];\n\n        try {\n            const [GraphicsLayer, watchUtils] = await (loadModules([\n                'esri/layers/GraphicsLayer',\n                'esri/core/watchUtils',\n            ]) as Promise<Modules>);\n\n            layerRef.current = new GraphicsLayer({\n                minScale: visibleScale && visibleScale.min,\n                maxScale: visibleScale && visibleScale.max,\n                visible: false,\n            });\n\n            mapView.map.add(layerRef.current);\n\n            watchUtils.whenTrue(mapView, 'stationary', () => {\n                const isInVisibleScale =\n                    mapView.scale < visibleScale.min &&\n                    mapView.scale > visibleScale.max;\n                setIsLayerInVisibleScale(isInVisibleScale);\n            });\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    const draw = async () => {\n        const layer = layerRef.current;\n\n        type Modules = [typeof ICIMSymbol, typeof IGraphic, typeof IPoint];\n\n        const nationalLevelPathData =\n            nationalLevelData.features[0].PctUnemployed.path;\n        const nationalLevelFrame = nationalLevelData.frames.PctUnemployed;\n\n        // console.log(nationalLevelData);\n\n        try {\n            const [CIMSymbol, Graphic, Point] = await (loadModules([\n                'esri/symbols/CIMSymbol',\n                'esri/Graphic',\n                'esri/geometry/Point',\n            ]) as Promise<Modules>);\n\n            const { features, frames } = data;\n\n            const frame = showDeviation\n                ? frames.PctUnemployedDeviation\n                : frames.PctUnemployed; // frames.PctUnemployed;\n\n            const addGraphicsByChunk = (startIndex = 0) => {\n                // console.log('doChunk', startIndex)\n                const chunckNum = 800;\n                const endIndex =\n                    startIndex + chunckNum < features.length\n                        ? startIndex + chunckNum\n                        : features.length;\n\n                const data: FeatureWithPathData[] = features.slice(\n                    startIndex,\n                    endIndex\n                );\n\n                const graphics = data.map((feature) => {\n                    const {\n                        geometry,\n                        PctUnemployed,\n                        PctUnemployedDeviation,\n                    } = feature;\n\n                    const pathData = showDeviation\n                        ? PctUnemployedDeviation\n                        : PctUnemployed;\n\n                    const anchorPoint = {\n                        x: 0,\n                        y: showDeviation ? 0 : -0.5,\n                    };\n\n                    const size = showDeviation ? 60 : 30;\n\n                    const { path } = pathData;\n\n                    const color = [50, 100, 255, 255];\n\n                    // Create the CIM symbol:\n                    //  - set the size value\n                    //  - assign the generated path to the marker's geometry\n                    const symbol = new CIMSymbol({\n                        data: {\n                            type: 'CIMSymbolReference',\n                            symbol: {\n                                type: 'CIMPointSymbol',\n                                symbolLayers: [\n                                    {\n                                        type: 'CIMVectorMarker',\n                                        anchorPoint,\n                                        anchorPointUnits: 'Relative',\n                                        enable: true,\n                                        scaleSymbolsProportionally: false,\n                                        respectFrame: true,\n                                        size,\n                                        frame,\n                                        markerGraphics: [\n                                            {\n                                                type: 'CIMMarkerGraphic',\n                                                geometry: {\n                                                    paths: [path],\n                                                },\n                                                symbol: {\n                                                    type: 'CIMLineSymbol',\n                                                    symbolLayers: [\n                                                        {\n                                                            type:\n                                                                'CIMSolidStroke',\n                                                            width: 1,\n                                                            color,\n                                                        },\n                                                    ],\n                                                },\n                                            },\n                                        ],\n                                    },\n                                    !showDeviation\n                                        ? {\n                                              type: 'CIMVectorMarker',\n                                              anchorPoint,\n                                              anchorPointUnits: 'Relative',\n                                              enable: true,\n                                              scaleSymbolsProportionally: false,\n                                              respectFrame: true,\n                                              size,\n                                              frame: nationalLevelFrame,\n                                              markerGraphics: [\n                                                  {\n                                                      type: 'CIMMarkerGraphic',\n                                                      geometry: {\n                                                          paths: [\n                                                              nationalLevelPathData,\n                                                          ],\n                                                      },\n                                                      symbol: {\n                                                          type: 'CIMLineSymbol',\n                                                          symbolLayers: [\n                                                              {\n                                                                  type:\n                                                                      'CIMSolidStroke',\n                                                                  width: 1,\n                                                                  color: [\n                                                                      255,\n                                                                      50,\n                                                                      50,\n                                                                      100,\n                                                                  ],\n                                                              },\n                                                          ],\n                                                      },\n                                                  },\n                                              ],\n                                          }\n                                        : null,\n                                    showDeviation\n                                        ? {\n                                              type: 'CIMVectorMarker',\n                                              anchorPoint,\n                                              anchorPointUnits: 'Relative',\n                                              enable: true,\n                                              scaleSymbolsProportionally: false,\n                                              respectFrame: true,\n                                              size,\n                                              frame,\n                                              markerGraphics: [\n                                                  {\n                                                      type: 'CIMMarkerGraphic',\n                                                      geometry: {\n                                                          paths: [\n                                                              [\n                                                                  [0, 0],\n                                                                  [\n                                                                      frame.xmax,\n                                                                      0,\n                                                                  ],\n                                                              ],\n                                                          ],\n                                                      },\n                                                      symbol: {\n                                                          type: 'CIMLineSymbol',\n                                                          symbolLayers: [\n                                                              {\n                                                                  type:\n                                                                      'CIMSolidStroke',\n                                                                  width: 1,\n                                                                  color: [\n                                                                      255,\n                                                                      50,\n                                                                      50,\n                                                                      100,\n                                                                  ],\n                                                              },\n                                                          ],\n                                                      },\n                                                  },\n                                              ],\n                                          }\n                                        : null,\n                                ],\n                            },\n                        },\n                    });\n\n                    const graphic = new Graphic({\n                        geometry: new Point({\n                            latitude: geometry.y,\n                            longitude: geometry.x,\n                        }),\n                        symbol,\n                    });\n\n                    return graphic;\n                });\n\n                layer.addMany(graphics);\n\n                if (startIndex + chunckNum < features.length) {\n                    renderDealy.current = setTimeout(() => {\n                        addGraphicsByChunk(startIndex + chunckNum);\n                    }, 1);\n                } else {\n                    layer.visible = true;\n                }\n            };\n\n            addGraphicsByChunk(0);\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    useEffect(() => {\n        if (mapView) {\n            init();\n        }\n    }, [mapView]);\n\n    useEffect(() => {\n        if (layerRef.current && data) {\n            layerRef.current.removeAll();\n            clearTimeout(renderDealy.current);\n\n            if (isLayerInVisibleScale) {\n                draw();\n            }\n        }\n    }, [layerRef, data, showDeviation]);\n\n    useEffect(() => {\n        if (\n            data &&\n            isLayerInVisibleScale &&\n            !layerRef.current.graphics.length\n        ) {\n            clearTimeout(renderDealy.current);\n            draw();\n        }\n    }, [isLayerInVisibleScale]);\n\n    return null;\n};\n\nexport default SparklineLayer;\n","import React from 'react';\nimport classnames from 'classnames';\n\ntype Props = {\n    showDeviation: boolean;\n    onChange: () => void;\n};\n\nconst SparklineLayerSwitcher: React.FC<Props> = ({\n    showDeviation,\n    onChange,\n}: Props) => {\n    return (\n        <div\n            style={{\n                position: 'absolute',\n                top: '1rem',\n                right: '1rem',\n                background: '#fff',\n                padding: '.5rem',\n                cursor: 'pointer',\n                zIndex: 1,\n            }}\n            onClick={onChange}\n        >\n            <nav className=\"breadcrumbs modifier-class\">\n                <span\n                    className={classnames('crumb', {\n                        'is-active': !showDeviation,\n                    })}\n                >\n                    Pct Unemployment\n                </span>\n                <span\n                    className={classnames('crumb', {\n                        'is-active': showDeviation,\n                    })}\n                >\n                    Deviation\n                </span>\n            </nav>\n        </div>\n    );\n};\n\nexport default SparklineLayerSwitcher;\n","import React from 'react';\n\nimport { AppLayout } from '../../components';\n\nconst RootPage = () => {\n    return <AppLayout />;\n};\n\nexport default RootPage;\n","import './styles/index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// import { Provider as ReduxProvider } from 'react-redux';\n// import configureAppStore, { getPreloadedState } from './store/configureStore';\n\nimport AppContextProvider from './contexts/AppContextProvider';\n\nimport { RootPage } from './pages';\n\n(async () => {\n    // const preloadedState = getPreloadedState();\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <AppContextProvider>\n                <RootPage />\n            </AppContextProvider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n})();\n"],"sourceRoot":""}